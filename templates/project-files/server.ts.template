import { BaseServer, ExpressErrorMiddleware, ExpressFinalMiddleware } from "@uo/base-server";
import { Logger } from "@uo/logger";
import { Response, Request, NextFunction } from "express";
import { useExpressServer } from "routing-controllers";
import RootController from "./api/root/root.controller";
import env from "./configs";

/**
 * @description HTTP Server Class
 */
export default class Server extends BaseServer {

    public startTime: [number, number] = process.hrtime();

    public constructor(logger: Logger) {
        super(env, logger);

        // Configure routing-controllers express app
        useExpressServer(this.app, {
            cors: env.devEnvironments.includes(env.environment),
            validation: { ...env.validationOptions },
            controllers: [RootController],
            middlewares: [ExpressErrorMiddleware, ExpressFinalMiddleware]
        });

        // TODO this is temporary to see if it satisfies CheckMarx
        this.app.use((req: Request, res: Response, next: NextFunction): void => {
            res.setHeader("Content-Security-Policy", "script-src 'self'");
            return next();
        });
    }
}
